ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt;",
text = "fill:black;stroke:none;"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt;",
text = "fill:black;stroke:none;"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt;",
text = "fill:black;stroke:none;"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
quarto::quarto_render()
quarto::quarto_render()
g_out <- ggiraph(ggobj = g)
remotes::install_version("htmltools", "0.5.2")
.libPaths()
g_out
library(tidyverse)
theme_set(theme_light())
df <- readr::read_csv("https://www.metoffice.gov.uk/hadobs/hadcrut5/data/current/analysis/diagnostics/HadCRUT.5.0.1.0.analysis.summary_series.global.monthly.csv")
df %>% colnames()
df <- df %>%
janitor::clean_names()
df %>% colnames()
#| column: page
df %>% skimr::skim()
df %>%
ggplot(aes(x = time, y = anomaly_deg_c)) +
geom_point()
```{r}
df %>% select(time)
df <- df %>%
mutate(time = lubridate::ymd(paste0(time, "-01")))
df %>%
ggplot(aes(x = time, y = anomaly_deg_c)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, lty = 2)
df %>%
ggplot(aes(x = time, y = 1, fill = anomaly_deg_c)) +
geom_tile()
df %>%
ggplot(aes(x = time, y = 1, fill = anomaly_deg_c)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0)
#| column: page
df %>%
ggplot(aes(x = time, y = 1, fill = anomaly_deg_c)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
) +
labs(
x = "Year",
y = NULL,
caption = "Inspired by Ed Hawkins\nData from the Met Office"
)
df <- df %>%
mutate(year = lubridate::year(time)) %>%
group_by(year) %>%
mutate(across(anomaly_deg_c:upper_confidence_limit_97_5_percent, mean)) %>%
ungroup() %>%
distinct(year, .keep_all = T)
df %>%
ggplot(aes(time, y = 1, fill = anomaly_deg_c)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
) +
labs(
x = "Year",
y = NULL,
caption = "Inspired by Ed Hawkins\nData from the Met Office"
)
library(ggiraph)
g <- df %>%
ggplot(aes(time, y = 1, fill = anomaly_deg_c, tooltip = anomaly_deg_c)) +
geom_tile_interactive() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
) +
labs(
x = "Year",
y = NULL,
caption = "Inspired by Ed Hawkins\nData from the Met Office"
)
g_out <- ggiraph(ggobj = g)
g_out
library(ggiraph)
g <- df %>%
ggplot(aes(time, y = 1, fill = anomaly_deg_c, tooltip = anomaly_deg_c)) +
geom_tile_interactive() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0) +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
) +
labs(
x = "Year",
y = NULL,
caption = "Inspired by Ed Hawkins\nData from the Met Office"
)
g_out <- ggiraph(ggobj = g)
g_out
g <- df %>%
mutate(tooltip = round(anomaly_deg_c, digits = 2),
tooltip = str_c("Degree deviation from base period in ", year, "\n", tooltip, " c")) %>%
ggplot(aes(time, y = 1, fill = anomaly_deg_c, tooltip = tooltip)) +
geom_tile_interactive() +
scale_fill_gradient2(low = "blue", high = "red", mid = "pink", midpoint = 0) +
theme(
legend.position = "none",
panel.grid = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
) +
labs(
x = "Year",
y = NULL,
caption = "Inspired by Ed Hawkins\nData from the Met Office"
)
g_out <- ggiraph(ggobj = g)
g_out
df %>%
mutate(year = lubridate::year(time)) %>%
group_by(year) %>%
mutate(across(anomaly_deg_c:upper_confidence_limit_97_5_percent, mean)) %>%
ungroup() %>%
distinct(year, .keep_all = T) %>%
ggplot(aes(x = time, ymin = lower_confidence_limit_2_5_percent, ymax = upper_confidence_limit_97_5_percent)) +
geom_ribbon(fill = "grey70") +
geom_line(aes(x = time, y = anomaly_deg_c))
df <- readxl::read_excel(here::here("data", "Global_REE_occurrence_database.xlsx"))
df <- df %>%
janitor::clean_names()
df %>%
separate_rows(commods, sep = ",") %>%
mutate(commods = str_squish(commods)) %>%
filter(commods == "Li") %>%
count(country, sort = T)
df
df <- read_rds(here("data/Gender-equality-index.rds"))
df <- df %>% select(reference_year_main, country_name, gender_equality_index) %>%
distinct() %>%
rename(year = reference_year_main)
df %>%
ggplot(aes(year, gender_equality_index, colour = country_name)) +
geom_point(cex = 3) +
geom_line(cex = 1) +
gghighlight::gghighlight(country_name %in% c("France", "Sweden", "Hungary")) +
scale_x_continuous(labels = scales::number_format(big.mark = "", accuracy = 1)) +
scale_color_brewer(palette = "Dark2") +
labs(
x = "Year",
y = "Gender Equality Index",
caption = "Data: European Institute of Gender Equality",
title = "Gender Equality Index",
subtitle = "European Union member states 2010-2019"
)
df <- read_rds(here("data/Gender-equality-index.rds"))
library(tidyverse)
library(here)
theme_set(theme_light())
df <- read_rds(here("data/Gender-equality-index.rds"))
df <- df %>% select(reference_year_main, country_name, gender_equality_index) %>%
distinct() %>%
rename(year = reference_year_main)
df <- df %>% select(reference_year_main, country_name, gender_equality_index) %>%
distinct() %>%
rename(year = reference_year_main)
df <- read_rds(here("data/Gender-equality-index.rds"))
df <- df %>% select(reference_year_main, country_name, gender_equality_index) %>%
distinct() %>%
rename(year = reference_year_main)
#| column: page
df %>%
skimr::skim()
df %>%
ggplot(aes(year, gender_equality_index, colour = country_name)) +
geom_point(cex = 3) +
geom_line(cex = 1) +
gghighlight::gghighlight(country_name %in% c("France", "Sweden", "Hungary")) +
scale_x_continuous(labels = scales::number_format(big.mark = "", accuracy = 1)) +
scale_color_brewer(palette = "Dark2") +
labs(
x = "Year",
y = "Gender Equality Index",
caption = "Data: European Institute of Gender Equality",
title = "Gender Equality Index",
subtitle = "European Union member states 2010-2019"
)
df <- df %>%
group_by(year) %>%
mutate(rank = rank(desc(gender_equality_index), ties.method = "average")) %>%
ungroup()
df %>%
arrange(year, rank)
df %>%
ggplot(aes(year, rank, color = country_name)) +
geom_line(size = 3) +
gghighlight::gghighlight(country_name %in% c("France", "Sweden", "Hungary"))
df %>%
ggplot(aes(year, rank, color = country_name)) +
geom_line(size = 3) +
gghighlight::gghighlight(country_name %in% c("France", "Sweden", "Hungary")) +
scale_y_reverse()
labels_left <- df %>%
filter(year == min(year)) %>%
mutate(left_rank = rank) %>%
select(country_name, left_rank)
labels_right <- df %>%
filter(year == max(year)) %>%
mutate(right_rank = rank) %>%
select(country_name, right_rank)
df <- df %>%
inner_join(labels_left) %>%
inner_join(labels_right)
df %>%
ggplot(aes(x = year, y = rank, colour = right_rank, group = country_name)) +
geom_line() +
theme(legend.position = "none")
df %>%
ggplot(aes(x = year, y = rank, colour = right_rank, group = country_name)) +
geom_line(size =3) +
scale_color_gradient2(low = "blue", high = "red", mid = "pink", midpoint = 14) +
theme(legend.position = "none")
df %>%
ggplot(aes(year, rank, color = right_rank, group = country_name)) +
geom_line(size = 2.8, aes(year, rank, group = country_name), colour = "black") +
geom_line(size = 2) +
geom_text(aes(
x = 2010, y = left_rank,
label = paste0(left_rank, ". ", country_name)
),
colour = "black",
hjust = 1.1,
cex = 3
) +
geom_text(aes(
x = 2019, y = right_rank,
label = paste0(right_rank, ". ", country_name)
),
colour = "black",
hjust = 0,
cex = 3
) +
scale_y_reverse() +
scale_color_gradient2(
low = "blue", high = "red",
mid = "pink",
midpoint = 12
) +
scale_x_continuous(labels = scales::number_format(big.mark = "", accuracy = 1)) +
coord_cartesian(xlim = c(2009, 2020)) +
theme(
legend.position = "none",
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
) +
labs(
x = NULL,
y = NULL
)
library(tidyverse)
df <- read_rds(here::here("data/Gender-equality-index.rds"))
df %>%
ggplot(aes(index_year, gender_equality_index, colour = country_name)) +
geom_line()
countries_highlight <- df %>%
distinct(country_name) %>%
sample_n(5) %>%
pull()
df %>%
mutate(country_flag = case_when(
country_name %in% countries_highlight ~ 1,
TRUE ~ 0
)) %>%
ggplot(aes(index_year, gender_equality_index, colour = country_name)) +
geom_line(size = 3) +
gghighlight::gghighlight(country_flag == 1) +
scale_x_continuous(labels = scales::number_format(accuracy = 1, big.mark = ""))
df_rank <- df %>%
select(reference_year_main, country_name, gender_equality_index) %>%
distinct()
df_rank <- df_rank %>%
group_by(reference_year_main) %>%
mutate(rank = rank(desc(gender_equality_index), ties.method = "average")) %>%
ungroup() %>%
rename(year = reference_year_main)
df_rank %>%
ggplot(aes(year, rank, colour = country_name)) +
geom_line(size = 3)
df %>%
mutate(country_flag = case_when(
country_name %in% countries_highlight ~ 1,
TRUE ~ 0
)) %>%
ggplot(aes(index_year, gender_equality_index, colour = country_name)) +
geom_line(size = 3) +
gghighlight::gghighlight(country_flag == 1) +
scale_x_continuous(labels = scales::number_format(accuracy = 1, big.mark = ""))
df_rank
df_rank <- df %>%
select(reference_year_main, country_name, gender_equality_index) %>%
distinct()
df_rank
df_rank <- df_rank %>%
group_by(reference_year_main) %>%
mutate(rank = rank(desc(gender_equality_index), ties.method = "average")) %>%
ungroup() %>%
rename(year = reference_year_main)
df_rank
df_rank %>%
ggplot(aes(year, rank, colour = country_name)) +
geom_line(size = 3)
labels_left <- df_rank %>%
filter(year == min(year)) %>%
mutate(left_rank = rank) %>%
select(country_name, left_rank)
labels_right <- df_rank %>%
filter(year == max(year)) %>%
mutate(right_rank = rank) %>%
select(country_name, right_rank)
df_rank <- df_rank %>%
inner_join(labels_left) %>%
inner_join(labels_right)
df_rank %>%
ggplot(aes(year, rank, colour = right_rank, group = country_name)) +
geom_line(size = 2.8, aes(year, rank, group = country_name), colour = "black") +
geom_line(size = 2) +
geom_text(aes(
x = 2010,
y = left_rank,
label = paste0(left_rank, ". ", country_name)
),
colour = "black",
hjust = 1.1,
cex = 3
) +
geom_text(aes(
x = 2019,
y = right_rank,
label = paste0(right_rank, ". ", country_name)
),
colour = "black",
hjust = 0,
cex = 3
) +
scale_y_reverse() +
scale_color_gradient2(
low = "blue",
high = "red",
mid = "pink",
midpoint = 12
) +
scale_x_continuous(breaks = c(2010, 2012, 2015, 2017, 2018, 2019)) +
coord_cartesian(xlim = c(2009, 2020)) +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
labs(x = NULL,
y = NULL)
library(ggiraph)
g <- df_rank %>%
ggplot(aes(year, rank, colour = right_rank, group = country_name)) +
geom_line(size = 2.8, aes(year, rank, group = country_name), colour = "black") +
geom_line_interactive(size = 2, aes(data_id = country_name)) +
geom_text_interactive(aes(
x = 2010,
y = left_rank,
label = paste0(left_rank, ". ", country_name),
data_id = country_name
),
colour = "black",
hjust = 1.1,
cex = 3
) +
geom_text_interactive(aes(
x = 2019,
y = right_rank,
label = paste0(right_rank, ". ", country_name),
data_id = country_name
),
colour = "black",
hjust = 0,
cex = 3
) +
scale_y_reverse() +
scale_color_gradient2(
low = "blue",
high = "red",
mid = "pink",
midpoint = 12
) +
scale_x_continuous(breaks = c(2010, 2012, 2015, 2017, 2018, 2019)) +
coord_cartesian(xlim = c(2009, 2020)) +
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
labs(x = NULL,
y = NULL)
ggiraph(ggobj = g) %>%
girafe_options(
opts_hover(css = girafe_css(
css = "fill:none;stroke:red;r:5pt",
text = "fill:black;stroke:none"
)),
opts_hover_inv(css = girafe_css(
css = "fill:none;stroke:gray;opacity:.9",
text = "fill:gray;stroke:none;opacity:.9"
))
)
quarto::quarto_render()
install.packages("tidytuesdayR")
quarto::quarto_render()
install.packages("tmap")
quarto::quarto_render()
install.packages("downlit")
quarto::quarto_render()
#| output-location: slide
library(ggplot2)
ggplot(airquality, aes(Temp, Ozone)) +
geom_point() +
geom_smooth(method = "loess")
