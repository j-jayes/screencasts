{
  "hash": "5d2c4c15226d31b5422d9bbf050eb8b8",
  "result": {
    "markdown": "---\ntitle: \"Scraping paginated HTML sites in R\"\nauthor: Jonathan\ndate: 09-19-2022\ndescription: \"Showcasing web scraping in R with a focus on historical Swedish data\"\nimage: \"https://raw.githubusercontent.com/j-jayes/screencasts/main/images/tax.jpg\"\nformat: \n  html:\n    code-link: true\n    code-overflow: wrap\nexecute:\n  freeze: true\n---\n\n## Purpose\n\nScrape the website of the Stockholm city archive.\n\n## Structure of the screencast\n\n### Look at the webpage\n\n- View page source\n\n### Check permission\n\n- Robots.txt file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(robotstxt)\nget_robotstxt(\"https://sok.stadsarkivet.stockholm.se/\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[robots.txt]\n--------------------------------------\n\nUser-agent: *\nDisallow: /js/\nDisallow: /Bin/\nDisallow: /images/ \nDisallow: /Tornado/ \nDisallow: /App_Code/\nDisallow: /Bildarkiv/\nDisallow: /SSAsupportcenter/\n```\n:::\n:::\n\n\n\n### Function to get the table elements\n\n- Using `rvest` to get the table elements\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rvest' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Attaching packages --------------------------------------- tidyverse 1.3.1 --\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nv ggplot2 3.3.5     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tibble' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.1.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter()         masks stats::filter()\nx readr::guess_encoding() masks rvest::guess_encoding()\nx dplyr::lag()            masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nurl <- \"https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=0&artal=1800\"\n\nget_table_data <- function(url) {\n  message(\"Getting data from \", url)\n  html <- read_html(url)\n\n  table <- html %>%\n    html_nodes(\".table\") %>%\n    html_table()\n\n  table <- table[[1]]\n\n  table <- table %>%\n    filter(between(row_number(), 4, 13)) %>%\n    select(1:7) %>%\n    rename(\n      year = X1,\n      district = X2,\n      index = X3,\n      surname = X4,\n      first_name = X5,\n      title = X6,\n      other = X7\n    )\n  \n  table\n}\n\n# test\nget_table_data(url)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=0&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 x 7\n   year  district      index surname          first_name title           other\n   <chr> <chr>         <chr> <chr>            <chr>      <chr>           <chr>\n 1 1800  Adolf Fredrik 18    Qviding          M          piga            \"\"   \n 2 1800  Adolf Fredrik 18    Rosandersson     J          revisor         \"\"   \n 3 1800  Adolf Fredrik 18    Åhlström         C          piga            \"\"   \n 4 1800  Adolf Fredrik 18    Öhman            C          fd brandvakt    \"\"   \n 5 1800  Adolf Fredrik 180   Röding           N          korpral         \"\"   \n 6 1800  Adolf Fredrik 180   Savarü (Savary?) J F        fd styckjunkare \"\"   \n 7 1800  Adolf Fredrik 180   Widlund          P          ullkammare      \"\"   \n 8 1800  Adolf Fredrik 180   Åberg            J          gesäll          \"\"   \n 9 1800  Adolf Fredrik 181   Dahlberg         M P        soldat          \"\"   \n10 1800  Adolf Fredrik 181   Hellman          I          sjömansänka     \"\"   \n```\n:::\n:::\n\n\n\n### Get the number of pages on which there is data\n\n- Write a neat little function for this\n\n::: {.cell}\n\n```{.r .cell-code}\nget_n_pages <- function(url) {\n  html <- read_html(url)\n  message(\"Getting the number of pages from \", url)\n\n  n_res <- html %>%\n    html_nodes(\".antaltraffar-div\") %>%\n    html_text() %>%\n    str_squish() %>%\n    str_extract(\"[0-9].*\") %>%\n    str_remove(., \" \") %>%\n    parse_number()\n\n  n_pages <- ceiling(n_res / 10)\n\n  n_pages\n}\n\n# test\nget_n_pages(url)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting the number of pages from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=0&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4584\n```\n:::\n:::\n\n\n\n### Create a workflow to go through\n\n- Include parameters that we can change\n\n::: {.cell}\n\n```{.r .cell-code}\nyear_search <- 1800\nbase_url <- paste0(\"https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=0&artal=\", year_search)\nstart_page <- 1\nfinal_page <- get_n_pages(base_url)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting the number of pages from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=0&artal=1800\n```\n:::\n\n```{.r .cell-code}\nlist_of_pages <- tibble(\n  url = paste0(\"https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=\", start_page:final_page, \"&artal=\", year_search),\n  page = start_page:final_page\n)\n```\n:::\n\n\n\n### Iterate through the list of pages\n\n- Using the map function\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_out <- list_of_pages %>% \n  head(10) %>% \n  mutate(data = map(url, possibly(get_table_data, \"failed\"))) %>% \n  select(!url)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=1&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=2&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=3&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=4&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=5&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=6&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=7&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=8&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=9&artal=1800\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from https://sok.stadsarkivet.stockholm.se/Databas/mantalsregister-1800-1884/Sok?sidindex=10&artal=1800\n```\n:::\n\n```{.r .cell-code}\ndf_out <- df_out %>% \n  unnest(data)\n```\n:::\n\n\n\n### Save the data to a csv file\n\n- Some data management\n\n::: {.cell}\n\n```{.r .cell-code}\ntime <- Sys.time()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}