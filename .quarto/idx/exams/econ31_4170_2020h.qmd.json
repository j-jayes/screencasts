{"title":"Data science for economists exams","markdown":{"yaml":{"title":"Data science for economists exams","author":"Jonathan","date":"04-22-2022","description":"Solving some fun problems","image":"image_goes_here","draft":true,"format":{"html":{"code-link":true,"code-overflow":"wrap"}}},"headingText":"Purpose","containsRefs":false,"markdown":"\n\nThe university of Oslo has produced a course called Data Science for Economists at the bachelor level. I want to complete the exams as a resource for my R screencasts, and because it looks fun!\n\n## Exam 1\n\n```{r}\nlibrary(tidyverse)\nlibrary(knitr)\ntheme_set(theme_light())\n\ninclude_graphics(here::here(\"exams\", \"econ31_4170_2020h.pdf\"))\n```\n\n### Question 1: Mobility under Covid-19\n\n#### Subquestion 1a\n\n```{r}\nmobility <- read.csv(here::here(\"exams\", \"4170_vedlegg_2020_no_region_mobility_report.csv\")) %>% \n  as_tibble()\n\nmobility %>% skimr::skim()\n\nmobility %>% count() -> n_obs\n```\n\nThere are `r n_obs` observations.\n\n```{r}\n# transform into lubridate year month day format.\nmobility <- mobility %>% \n  mutate(date = lubridate::ymd(date))\n\nskimmed <- mobility %>% \n  skimr::skim()\n\nskimmed$Date.min %>% as_tibble() %>% filter(!is.na(value)) -> date_min\nskimmed$Date.max %>% as_tibble() %>% filter(!is.na(value)) -> date_max\n\n```\n\nThe dates range from `r date_min` and `r date_max`.\n\n#### Subquestion 1b\n\n```{r}\nmobility %>% count(sub_region_1, sort = T)\nmobility %>% count(sub_region_2, sort = T)\n```\n\nUTF-8 can accommodate Norwegian characters like Ãƒ.\n\n#### Subquestion 1c\n\n```{r}\noslo <- mobility %>% \n  filter(sub_region_1 == \"Oslo\")\n\noslo %>% \n  ggplot(aes(date, residential_percent_change_from_baseline)) +\n  geom_point() +\n  geom_smooth()\n```\n\nIn Oslo, it looks like there was a big spike in March and a decline in movement over the summer, before an increase again towards Christmas.\n\nThere appear to be some day of the week effects also!\n\n#### Subquestion 1d\n\n```{r}\noslo <- oslo %>%\n  mutate(\n    weekday = lubridate::wday(date, label = T),\n    weekend = case_when(\n      weekday %in% c(\"Sat\", \"Sun\") ~ 1,\n      TRUE ~ 0\n    ),\n    weekend = factor(weekend)\n  )\n\n\nplot_oslo <- function(var) {\n  oslo %>%\n    ggplot(aes(date, residential_percent_change_from_baseline, colour = {{ var }})) +\n    geom_point() +\n    geom_smooth(se = F)\n}\n\nplot_oslo(weekday) +\n  labs(colour = \"Weekday\")\n\nplot_oslo(weekend) +\n  labs(colour = \"Is it a weekend?\")\n```\n\n#### Subquestion 1e\n\nNote that they store aggregate data in a strange way - if sub_region_2 is an empty string but sub_region_1 names a county then this is aggregate data at the county level.\n\n```{r}\nmobility %>%\n  filter(sub_region_2 == \"\",\n         sub_region_1 != \"\") %>% \n  mutate(\n    weekday = lubridate::wday(date, label = T),\n    weekend = case_when(\n      weekday %in% c(\"Sat\", \"Sun\") ~ \"Weekend\",\n      TRUE ~ \"Weekday\"\n    )\n  ) %>% \n  ggplot(aes(date, residential_percent_change_from_baseline, colour = sub_region_1)) +\n  geom_line() +\n  # geom_smooth(se = F) +\n  facet_wrap(~ weekend, nrow = 2)\n```\n\nThree weekday spikes are between April and June?\n\n#### Subquestion 1f\n\nIs this correct? Or should I be looking at squared differences?\n\n```{r}\nmobility %>%\n  filter(\n    sub_region_2 == \"\",\n    sub_region_1 != \"\",\n    between(date, lubridate::ymd(\"2020-03-12\"), lubridate::ymd(\"2020-10-31\"))\n  ) %>% \n  group_by(sub_region_1) %>% \n  summarise(mean_response = mean(residential_percent_change_from_baseline, na.rm = T),\n            median_response = median(residential_percent_change_from_baseline, na.rm = T)) %>% \n  ungroup() %>% \n  mutate(sub_region_1 = fct_reorder(sub_region_1, mean_response)) %>% \n  pivot_longer(-sub_region_1) %>% \n  mutate(value = round(value, 2)) %>% \n  ggplot(aes(value, sub_region_1, fill = name)) +\n  geom_col() +\n  geom_text(aes(label = value), hjust = 1.2) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  facet_wrap(~ name) +\n  theme(legend.position = \"none\") +\n  labs(x = \"Summary of residential percent change from baseline\")\n```\n\n#### Subquestion 1g\n\n```{r}\nnational <- mobility %>% \n  filter(sub_region_1 == \"\")\n\noslo_compare <- national %>% \n  select(residential_percent_change_from_baseline, date) %>% \n  rename(national = residential_percent_change_from_baseline) %>% \n  bind_cols(oslo %>% select(residential_percent_change_from_baseline) %>% \n              rename(oslo = residential_percent_change_from_baseline))\n\noslo_compare %>% \n  pivot_longer(-date) %>% \n  ggplot(aes(date, value, colour = name)) +\n  geom_line()\n\noslo_compare %>% \n  mutate(week = lubridate::week(date)) %>% \n  group_by(week) %>% \n  mutate(across(c(national, oslo), mean)) %>% \n  ungroup() %>% \n  distinct(national, oslo, week) %>% \n  mutate(oslo_national = oslo / national) %>% \n  ggplot(aes(week, oslo_national)) +\n  geom_line()\n\n```\n\n???\n\n### Question 2\n\n#### Subquestion 2a\n\n```{r}\ndf <- tibble(x = 1:10,\n             y = 1:10)\n\ngamma = .5\ntheta = .3\nphi = 2\n\ndf %>% \n  mutate(comp_1 = ((x^(1-gamma)/1-gamma)),\n         comp_2 = phi*((y^(1-theta)/1-theta)),\n         utility = comp_1 + comp_2) %>% \n  pivot_longer(-c(x, y)) %>% \n  ggplot(aes(x, value, colour = name)) +\n  geom_point() +\n  geom_line()\n```\n\n\n### Question 3\n\n#### Subquestion 3a\n\nAxis is not from zero! Sneaky!\n\n```{r}\ndf <- tibble(chrome = 29.619,\n             edge = 31.786,\n             firefox = 26.876)\n\ndf %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(name = fct_reorder(name, value)) %>% \n  ggplot(aes(value, name, fill = name)) +\n  geom_col(show.legend = F) +\n  labs(x = \"Speed score\",\n       y = NULL)\n\n```\n\n#### Subquestion 3b\n\nSimilar!\n\n```{r}\ndf <- tibble(Latvia = 5.5,\n             Australia = 5.4,\n             Scotland = 5.4,\n             Peru = 5.4,\n             `South Africa` = 5.2,\n             India = 5)\n\ndf %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(name = fct_reorder(name, value)) %>% \n  ggplot(aes(value, name, fill = name)) +\n  geom_col(show.legend = F) +\n  labs(x = \"Average female height\",\n       y = NULL)\n\n```\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"econ31_4170_2020h.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.237","editor":"source","theme":{"light":["cosmo","../theme.scss"]},"title":"Data science for economists exams","author":"Jonathan","date":"04-22-2022","description":"Solving some fun problems","image":"image_goes_here","draft":true},"extensions":{"book":{"multiFile":true}}}}}