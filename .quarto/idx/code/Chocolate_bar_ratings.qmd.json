{"title":"Chocolate bar ratings","markdown":{"yaml":{"title":"Chocolate bar ratings","author":"Jonathan","date":"04-15-2022","description":"An exploration of chocolte bar ratings","image":"https://raw.githubusercontent.com/j-jayes/screencasts/main/figures/Chocolate_bar_ratings.jpeg","format":{"html":{"code-link":true,"code-overflow":"wrap"}},"execute":{"freeze":true}},"headingText":"Exploratory data analysis","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE, warning = F, message = F)\n```\n\nHello and welcome to the first episode of Kathy’s coding club. Today we’re doing to be looking at one of Kathy’s favourite foodstuffs – chocolate. \n\nWe’re going to be diving into the reviews of chocolate bars from the Manhattan Chocolate Society, who have rated over 2500 chocolate bars from around the world. We are going to be trying to answer a few questions about their ratings. \n\nThe data is accessible from the R for Data Science Tidy Tuesday repository on Github. \n\nIf you have any questions about the different commands that we use and why - have a look at [this post](https://interludeone.com/posts/2022-01-17-flavours-of-cocoa/) on my website. You can click on any of the commands and read the documentation to get a better understanding of how they are used, or which package they are from.\n\nThen let's get to it - the first step is to open a fresh Rmarkdown document - this allows you to keep human readable notes interspersed with your code that you can return to later, and export the prose and code in a number of different ways to share it, with colleagues or on the internet.\n\nThe next thing which I think is worth doing is to change the default IDE theme in Rstudio to darkmode. This is easier on your eyes and makes you look professional. You can find the Rstudio appearance settings under tools, and then global options. I like the Cobalt theme, but there are many to choose from.\n\nOne other thing I would suggest is the use of rainbow parentheses - these make it easy to see where you're missing a bracket. You can enable them under the code tab in Global options. \n\nGreat - then let's get to it!\n\nFirst we will call the tidyverse meta package - a cohesive group of packages that make working with messy data very easy - originally coined by Hadley Wickham but improved upon by a great many contributors. I'll leave a link in the description to more info about this.\n\nThen we read in the data from the R4DS Tidy Tuesday Repo.\n\n```{r}\nlibrary(tidyverse)\n\ndf <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-18/chocolate.csv')\n\ntheme_set(theme_light())\n```\n\n\nFirst we can have a look at the data we have read in - This gives us a tibble (similar to a dataframe) with 10 columns (3 numeric and 7 character) and 2,530 individual reviews.\n\n```{r}\n#| column: page\ndf %>% \n  skimr::skim()\n```\n\nNext we can look at some of the common countries in which the beans are processed into bars, as well as where the beans originate.\n\n```{r}\ndf %>% \n  count(company_location, sort = T)\n\ndf %>% \n  count(country_of_bean_origin, sort = T)\n```\n\nLooking at the bar ratings, we can see a distribution that is centred just above 3 - this is in line with what we saw from the skim of the dataset above - a mean rating of 3.2\n\n```{r}\ndf %>%\n  ggplot(aes(rating)) +\n  geom_histogram(binwidth = .25, fill = \"midnightblue\") +\n  labs(x = \"Chocolate bar rating\",\n       y = \"Number of bars\")\n```\n\n### Initial questions\n\n- Have ratings been going up over time?\n\nThe first simple plot we can make to examine this question is a boxplot - we can use `ggplot` to create a boxplot, mapping review date to the x axis, rating to the y axis, and we include the command `group = review_date`.\n\n```{r}\ndf %>% \n  ggplot(aes(review_date, rating, group = review_date)) +\n  geom_boxplot()\n```\n\nGreat - we can see that the median ranges between 3 and 3.25, increasing in 2010. We can also see that the bottom of the distribution has moved up over time. In other words, there are fewer low scoring chocolate bars over time - potentially indicating an increase in quality of the bars or greater leniency on the part of the reviewers.\n\nWe can visualize this distribution with the help of another package called `ggridges`. \n\nI'll build up this visualization in stages:\n\nWe'll start by mapping the ratings onto the x-axis, the year of the review onto the y-axis (as a factor rather than as a continuous variable).\n\n```{r}\nlibrary(ggridges)\n\ndf %>% \n  ggplot(aes(rating, y = factor(review_date))) +\n  geom_density_ridges()\n```\n\nGreat - we can see that the pattern we saw earlier is clear - as time increases up the y-axis, the share of bars receiving reviews below three decreases.\n\nNext we can add in a colour scale for the fill:\n\n```{r}\ndf %>% \n  ggplot(aes(rating, y = factor(review_date), fill = review_date)) +\n  geom_density_ridges() +\n  scale_fill_viridis_c(option = \"magma\")\n```\n\nThe viridis colour scales are nice for two reasons - they're discernible to people with most forms of colour blindness and print well if you only use black and white. The magma option gives a nice fade from purple to yellow.\n\nNext we can move the colourbar in the legend to the bottom and increase it in size, and add some labels.\n\n```{r}\ndf %>%\n  ggplot(aes(rating, y = factor(review_date), fill = review_date)) +\n  geom_density_ridges() +\n  scale_fill_viridis_c(option = \"magma\") +\n  theme(legend.position = \"bottom\") +\n  guides(fill = guide_colorbar(\n    title.position = \"bottom\",\n    barwidth = 25,\n    title.hjust = .5\n  )) +\n    labs(y = NULL,\n         x = \"Chocolate bar rating\",\n         fill = \"Date of review\")\n```\n\n### What can we learn about the number of ingredients and cocoa percentage?\n\nSelecting the ingredients column, we see that it has the number of ingredients and each ingredient listed after a dash and separated by commas.\n\n```{r}\ndf %>% \n  select(ingredients)\n```\n\nThe chocolate bar ingredients are:\n\n```{r}\nstr <- \"B = Beans, S = Sugar, S* = Sweetener other than white cane or beet sugar, C = Cocoa Butter, V = Vanilla, L = Lecithin, Sa = Salt\"\n\nstr <- str %>% \n  as_tibble() %>% \n  separate_rows(value, sep = \",\") %>% \n  separate(value, c(\"key\", \"value\"), \"=\") %>% \n  mutate(across(c(key, value), str_squish))\n\nknitr::kable(str)\n```\n\n\n```{r}\ndf <- df %>% \n  mutate(ingredients = str_replace_all(ingredients, c(\"Sa\" = \"salt\",\n                                                      # the * is a special character \n                                                      # when writing Regex and so \n                                                      # we use the two backslashes to \n                                                      # \"escape\" the meaning\n                                                      \"S\\\\*\" = \"non_sugar_sweetener\",\n                                                      \"B\" = \"beans\",\n                                                      \"S\" =  \"sugar\",\n                                                      \"V\" = \"vanilla\",\n                                                      \"L\" = \"lecithin\",\n                                                      \"C\" = \"cocoa_butter\"\n                                                      )))\n```\n\nWe can use the `separate` function from `dplyr` to split the ingredients column into two columns, based on the dash which splits the two components.\n\nThe `separate` function takes three inputs: \n1. the column which you want to split, \n2. a character vector of new column names, and \n3. finally the regex which separates the columns.\n\n```{r}\ndf %>% \n  separate(ingredients, \n           into = c(\"n_ingredients\", \"ingredients\"), \n           sep = \"-\") %>% \n  select(n_ingredients, ingredients) %>%\n  mutate(n_ingredients = parse_number(n_ingredients))\n```\n\nWith the number of ingredients in it's own column now we can ask what share of the chocolate bars \n\n```{r}\n#| column: page\n#| fig-width: 10\n#| fig-height: 8\n\n# jpeg(filename = \"figures/Chocolate_bar_ratings.jpeg\",\n#      height = 6,\n#      width = 8,\n#      units = \"in\",\n#      res = 1000)\n\ndf %>% \n  separate(ingredients, into = c(\"n_ingredients\", \"ingredients\"), sep = \"-\") %>% \n  mutate(across(c(n_ingredients, cocoa_percent), parse_number),\n         cocoa_percent = cocoa_percent - cocoa_percent %% 5) %>% \n  count(cocoa_percent, n_ingredients) %>% \n  ggplot(aes(cocoa_percent, n_ingredients, fill = n)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  scale_x_continuous(labels = scales::percent_format(scale = 1)) +\n  labs(x = \"Cocoa percent\",\n       y = \"Number of ingredients\",\n       fill = \"Number of bars\")\n\n# dev.off()\n\n```\n\n### What is the correlation between ingredients that are used together?\n\n```{r}\ndf <- df %>%\n  separate(ingredients, into = c(\"n_ingredients\", \"ingredients\"), sep = \"-\") %>%\n  separate_rows(ingredients, sep = \",\") %>%\n  filter(!is.na(ingredients)) %>%\n  pivot_wider(names_from = ingredients, values_from = ingredients) %>%\n  mutate(across(beans:non_sugar_sweetener, ~ ifelse(is.na(.), 0, 1)))\n```\n\n\n\n### What do we know about the countries of origin?\n\n```{r}\ndf %>% \n  add_count(country_of_bean_origin) %>%\n  # only include countries with more than 60 bars\n  filter(n > 60) %>% \n  group_by(country_of_bean_origin) %>% \n  summarise(mean_rating = mean(rating)) %>% \n  mutate(country_of_bean_origin = fct_reorder(country_of_bean_origin, mean_rating)) %>% \n  ggplot(aes(mean_rating, country_of_bean_origin)) +\n  geom_col(fill = \"midnightblue\", alpha = .8) +\n  # ensure that x-axis looks appropriate.\n  coord_cartesian(xlim = c(3,3.3)) +\n    labs(x = \"Average rating for countries of origin with more than 60 bars reviewed\",\n         y = NULL)\n```\n\n\n\n### What are some fun variables??\n\n```{r}\ndf %>% \n  select(most_memorable_characteristics, rating) %>% \n  separate_rows(most_memorable_characteristics, sep = \",\") %>% \n  mutate(across(most_memorable_characteristics, str_squish)) %>% \n  add_count(most_memorable_characteristics) %>% \n  filter(n > 15) %>% \n  group_by(most_memorable_characteristics) %>% \n  summarise(mean_rating = mean(rating)) %>% \n  ungroup() %>% \n  arrange(mean_rating) %>% \n  slice(1:10, 69:78)\n```\n\n### Word model\n\n```{r}\ndf_characteristics <- df %>% \n  select(c(most_memorable_characteristics, rating)) %>% \n  separate_rows(most_memorable_characteristics, sep = \",\") %>% \n  mutate(most_memorable_characteristics = str_squish(most_memorable_characteristics))\n\ndf_characteristics %>% \n  count(most_memorable_characteristics, sort = T)\n```\n\n```{r}\ndf_characteristics %>% \n  group_by(most_memorable_characteristics) %>% \n  add_count() %>% \n  filter(n > 3) %>% \n  mutate(avg_rating = mean(rating)) %>% \n  ungroup() %>% \n  distinct(most_memorable_characteristics, avg_rating) %>% \n  slice_max(avg_rating, n = 12, with_ties = F) %>% \n    mutate(avg_rating = round(avg_rating, 2)) %>% \n    knitr::kable(col.names = c(\"Most memorable characteristics\", \"Average rating\"))\n```\n\n```{r}\nlibrary(tidymodels)\nlibrary(textrecipes)\n\ndf_characteristics_folds <- vfold_cv(df_characteristics)\n\nglmnet_recipe <- \n  recipe(formula = rating ~ ., data = df_characteristics) %>% \n  step_tokenize(most_memorable_characteristics) %>% \n  step_tokenfilter(most_memorable_characteristics, max_tokens = 100) %>% \n  step_tf(most_memorable_characteristics) %>% \n  step_normalize(all_predictors(), -all_nominal())\n\nglmnet_recipe %>% prep() %>% juice()\n```\n\n\n```{r}\nglmnet_spec <- \n  linear_reg(penalty = tune(), mixture = 1) %>% \n  set_mode(\"regression\") %>% \n  set_engine(\"glmnet\") \n\nglmnet_workflow <- \n  workflow() %>% \n  add_recipe(glmnet_recipe) %>% \n  add_model(glmnet_spec) \n\nglmnet_grid <- tidyr::crossing(penalty = 10^seq(-6, -1, length.out = 20)) \n\nglmnet_tune <- \n  tune_grid(glmnet_workflow, df_characteristics_folds, grid = glmnet_grid)\n\nglmnet_tune %>% \n  autoplot()\n```\n\n\n```{r}\nglmnet_model_final <- finalize_workflow(glmnet_workflow, glmnet_tune %>% \n  select_best())\n\nfinal_fit <- glmnet_model_final %>% \n  fit(df_characteristics)\n```\n\n```{r}\n#| column: page\n#| fig-width: 10\n#| fig-height: 8\n\nfinal_fit %>%\n  extract_fit_parsnip() %>%\n  tidy() %>%\n  filter(term != \"(Intercept)\") %>%\n  mutate(term = str_remove(term, \"tf_most_memorable_characteristics_\")) %>%\n  mutate(sign = estimate > 0) %>%\n  group_by(sign) %>%\n  mutate(estimate = abs(estimate)) %>% \n  slice_max(estimate, n = 12) %>%\n  ungroup() %>%\n  mutate(estimate = ifelse(sign == TRUE, estimate, -estimate)) %>% \n  mutate(term = fct_reorder(term, estimate)) %>%\n  ggplot(aes(estimate, term, fill = sign)) +\n  geom_col(show.legend = F) +\n  geom_vline(xintercept = 0, lty = 2) +\n  scale_fill_brewer(palette = \"Paired\") +\n  labs(x = \"Effect of term on chocolate bar score\",\n       y = \"Memorable characteristic\")\n```\n\n\n\n### Regression examples\n\n```{r}\ndf %>% \n  select(rating)\n\nlm(data = df %>% mutate(cocoa_percent = parse_number(cocoa_percent)), rating ~ cocoa_percent) %>%\n  tidy()\n```\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Chocolate_bar_ratings.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.237","editor":"source","theme":{"light":["cosmo","../theme.scss"]},"title":"Chocolate bar ratings","author":"Jonathan","date":"04-15-2022","description":"An exploration of chocolte bar ratings","image":"https://raw.githubusercontent.com/j-jayes/screencasts/main/figures/Chocolate_bar_ratings.jpeg"},"extensions":{"book":{"multiFile":true}}}}}