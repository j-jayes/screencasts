{
  "hash": "27405d29500107a59945aa8284e4b8eb",
  "result": {
    "markdown": "---\ntitle: \"Data science for economists exams\"\nauthor: Jonathan\ndate: 04-22-2022\ndescription: \"Solving some fun problems\"\nimage: \"image_goes_here\"\ndraft: true\nformat: \n  html:\n    code-link: true\n    code-overflow: wrap\n---\n\n# Purpose\n\nThe university of Oslo has produced a course called Data Science for Economists at the bachelor level. I want to complete the exams as a resource for my R screencasts, and because it looks fun!\n\n## Exam 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(knitr)\ntheme_set(theme_light())\n\ninclude_graphics(here::here(\"exams\", \"econ31_4170_2020h.pdf\"))\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h.pdf)\n:::\n:::\n\n\n### Question 1: Mobility under Covid-19\n\n#### Subquestion 1a\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmobility <- read.csv(here::here(\"exams\", \"4170_vedlegg_2020_no_region_mobility_report.csv\")) %>% \n  as_tibble()\n\nmobility %>% skimr::skim()\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |34217      |\n|Number of columns        |14         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |6          |\n|logical                  |2          |\n|numeric                  |6          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable       | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|country_region_code |         0|             1|   2|   2|     0|        1|          0|\n|country_region      |         0|             1|   6|   6|     0|        1|          0|\n|sub_region_1        |         0|             1|   0|  23|   277|       12|          0|\n|sub_region_2        |         0|             1|   0|  27|  3324|      172|          0|\n|iso_3166_2_code     |         0|             1|   0|   5| 31170|       12|          0|\n|date                |         0|             1|  10|  10|     0|      277|          0|\n\n\n**Variable type: logical**\n\n|skim_variable    | n_missing| complete_rate| mean|count |\n|:----------------|---------:|-------------:|----:|:-----|\n|metro_area       |     34217|             0|  NaN|:     |\n|census_fips_code |     34217|             0|  NaN|:     |\n\n\n**Variable type: numeric**\n\n|skim_variable                                      | n_missing| complete_rate|   mean|    sd|  p0| p25| p50|   p75| p100|hist  |\n|:--------------------------------------------------|---------:|-------------:|------:|-----:|---:|---:|---:|-----:|----:|:-----|\n|retail_and_recreation_percent_change_from_baseline |     21114|          0.38|  -5.79| 23.94| -96| -16|  -3|   7.0|  108|▁▃▇▁▁ |\n|grocery_and_pharmacy_percent_change_from_baseline  |     21786|          0.36|   2.24| 20.78| -95|  -5|   4|  12.0|  104|▁▁▇▁▁ |\n|parks_percent_change_from_baseline                 |     29782|          0.13|  54.38| 75.57| -80|   3|  37|  89.5|  616|▇▃▁▁▁ |\n|transit_stations_percent_change_from_baseline      |     18798|          0.45| -24.98| 27.81| -92| -45| -28|  -8.0|  135|▃▇▂▁▁ |\n|workplaces_percent_change_from_baseline            |      1632|          0.95| -27.89| 19.68| -92| -42| -24| -13.0|   30|▁▅▇▇▁ |\n|residential_percent_change_from_baseline           |     22596|          0.34|   5.36|  5.72| -11|   2|   4|   8.0|   33|▁▇▃▁▁ |\n:::\n\n```{.r .cell-code}\nmobility %>% count() -> n_obs\n```\n:::\n\n\nThere are 34217 observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# transform into lubridate year month day format.\nmobility <- mobility %>% \n  mutate(date = lubridate::ymd(date))\n\nskimmed <- mobility %>% \n  skimr::skim()\n\nskimmed$Date.min %>% as_tibble() %>% filter(!is.na(value)) -> date_min\nskimmed$Date.max %>% as_tibble() %>% filter(!is.na(value)) -> date_max\n```\n:::\n\n\nThe dates range from 2020-02-15 and 2020-11-17.\n\n#### Subquestion 1b\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmobility %>% count(sub_region_1, sort = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   sub_region_1                  n\n   <chr>                     <int>\n 1 \"Viken\"                    7482\n 2 \"Vestland\"                 3776\n 3 \"Innlandet\"                3520\n 4 \"Trøndelag\"                3277\n 5 \"Rogaland\"                 3227\n 6 \"Vestfold og Telemark\"     3061\n 7 \"Møre og Romsdal\"          2987\n 8 \"Nordland\"                 2250\n 9 \"Agder\"                    2242\n10 \"Troms og Finnmark fylke\"  1841\n11 \"\"                          277\n12 \"Oslo\"                      277\n```\n:::\n\n```{.r .cell-code}\nmobility %>% count(sub_region_2, sort = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 172 × 2\n   sub_region_2                    n\n   <chr>                       <int>\n 1 \"\"                           3324\n 2 \"Bergen Municipality\"         277\n 3 \"Trondheim Municipality\"      277\n 4 \"Ullensaker Municipality\"     277\n 5 \"Stavanger Municipality\"      275\n 6 \"Drammen Municipality\"        274\n 7 \"Kristiansand Municipality\"   274\n 8 \"Lillestrøm\"                  273\n 9 \"Tromsø Municipality\"         273\n10 \"Ålesund Municipality\"        271\n# … with 162 more rows\n```\n:::\n:::\n\n\nUTF-8 can accommodate Norwegian characters like Ã.\n\n#### Subquestion 1c\n\n\n::: {.cell}\n\n```{.r .cell-code}\noslo <- mobility %>% \n  filter(sub_region_1 == \"Oslo\")\n\noslo %>% \n  ggplot(aes(date, residential_percent_change_from_baseline)) +\n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nIn Oslo, it looks like there was a big spike in March and a decline in movement over the summer, before an increase again towards Christmas.\n\nThere appear to be some day of the week effects also!\n\n#### Subquestion 1d\n\n\n::: {.cell}\n\n```{.r .cell-code}\noslo <- oslo %>%\n  mutate(\n    weekday = lubridate::wday(date, label = T),\n    weekend = case_when(\n      weekday %in% c(\"Sat\", \"Sun\") ~ 1,\n      TRUE ~ 0\n    ),\n    weekend = factor(weekend)\n  )\n\n\nplot_oslo <- function(var) {\n  oslo %>%\n    ggplot(aes(date, residential_percent_change_from_baseline, colour = {{ var }})) +\n    geom_point() +\n    geom_smooth(se = F)\n}\n\nplot_oslo(weekday) +\n  labs(colour = \"Weekday\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_oslo(weekend) +\n  labs(colour = \"Is it a weekend?\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\n#### Subquestion 1e\n\nNote that they store aggregate data in a strange way - if sub_region_2 is an empty string but sub_region_1 names a county then this is aggregate data at the county level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmobility %>%\n  filter(sub_region_2 == \"\",\n         sub_region_1 != \"\") %>% \n  mutate(\n    weekday = lubridate::wday(date, label = T),\n    weekend = case_when(\n      weekday %in% c(\"Sat\", \"Sun\") ~ \"Weekend\",\n      TRUE ~ \"Weekday\"\n    )\n  ) %>% \n  ggplot(aes(date, residential_percent_change_from_baseline, colour = sub_region_1)) +\n  geom_line() +\n  # geom_smooth(se = F) +\n  facet_wrap(~ weekend, nrow = 2)\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nThree weekday spikes are between April and June?\n\n#### Subquestion 1f\n\nIs this correct? Or should I be looking at squared differences?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmobility %>%\n  filter(\n    sub_region_2 == \"\",\n    sub_region_1 != \"\",\n    between(date, lubridate::ymd(\"2020-03-12\"), lubridate::ymd(\"2020-10-31\"))\n  ) %>% \n  group_by(sub_region_1) %>% \n  summarise(mean_response = mean(residential_percent_change_from_baseline, na.rm = T),\n            median_response = median(residential_percent_change_from_baseline, na.rm = T)) %>% \n  ungroup() %>% \n  mutate(sub_region_1 = fct_reorder(sub_region_1, mean_response)) %>% \n  pivot_longer(-sub_region_1) %>% \n  mutate(value = round(value, 2)) %>% \n  ggplot(aes(value, sub_region_1, fill = name)) +\n  geom_col() +\n  geom_text(aes(label = value), hjust = 1.2) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  facet_wrap(~ name) +\n  theme(legend.position = \"none\") +\n  labs(x = \"Summary of residential percent change from baseline\")\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#### Subquestion 1g\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnational <- mobility %>% \n  filter(sub_region_1 == \"\")\n\noslo_compare <- national %>% \n  select(residential_percent_change_from_baseline, date) %>% \n  rename(national = residential_percent_change_from_baseline) %>% \n  bind_cols(oslo %>% select(residential_percent_change_from_baseline) %>% \n              rename(oslo = residential_percent_change_from_baseline))\n\noslo_compare %>% \n  pivot_longer(-date) %>% \n  ggplot(aes(date, value, colour = name)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\noslo_compare %>% \n  mutate(week = lubridate::week(date)) %>% \n  group_by(week) %>% \n  mutate(across(c(national, oslo), mean)) %>% \n  ungroup() %>% \n  distinct(national, oslo, week) %>% \n  mutate(oslo_national = oslo / national) %>% \n  ggplot(aes(week, oslo_national)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n:::\n\n\n???\n\n### Question 2\n\n#### Subquestion 2a\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(x = 1:10,\n             y = 1:10)\n\ngamma = .5\ntheta = .3\nphi = 2\n\ndf %>% \n  mutate(comp_1 = ((x^(1-gamma)/1-gamma)),\n         comp_2 = phi*((y^(1-theta)/1-theta)),\n         utility = comp_1 + comp_2) %>% \n  pivot_longer(-c(x, y)) %>% \n  ggplot(aes(x, value, colour = name)) +\n  geom_point() +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Question 3\n\n#### Subquestion 3a\n\nAxis is not from zero! Sneaky!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(chrome = 29.619,\n             edge = 31.786,\n             firefox = 26.876)\n\ndf %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(name = fct_reorder(name, value)) %>% \n  ggplot(aes(value, name, fill = name)) +\n  geom_col(show.legend = F) +\n  labs(x = \"Speed score\",\n       y = NULL)\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### Subquestion 3b\n\nSimilar!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(Latvia = 5.5,\n             Australia = 5.4,\n             Scotland = 5.4,\n             Peru = 5.4,\n             `South Africa` = 5.2,\n             India = 5)\n\ndf %>% \n  pivot_longer(cols = everything()) %>% \n  mutate(name = fct_reorder(name, value)) %>% \n  ggplot(aes(value, name, fill = name)) +\n  geom_col(show.legend = F) +\n  labs(x = \"Average female height\",\n       y = NULL)\n```\n\n::: {.cell-output-display}\n![](econ31_4170_2020h_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "econ31_4170_2020h_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}